import pymysql



def testeSelect(db):
	#创建查询游标
	cur1 = db.cursor()

	# 使用 execute()  方法执行 SQL 查询 
	cur1.execute("SELECT VERSION()")
	 
	# 使用 fetchone() 方法获取单条数据.
	data = cur1.fetchone()
	print(dir(data))
	print ("cur1 : %s " % cur1) 
	print ("Database version : %s " % data)

def dropTable(db):
	#创建查询游标
	cur1 = db.cursor()

	cur1.execute("drop table if exists python_demo")
	print('dropTable',cur1)
	 

def createTable(db):
	#创建查询游标
	cur1 = db.cursor()

	sql = '''
			CREATE TABLE IF NOT EXISTS python_demo (
				MEMBER_ID INT(20) NOT NULL AUTO_INCREMENT COMMENT '会员ID',
				MEMBER_CODE VARCHAR(20) NOT NULL COMMENT '会员代码',
				MEMBER_NAME VARCHAR(128) NOT NULL COMMENT '公司中文名称',
				MEMBER_NAME_SHORT VARCHAR(128) NULL DEFAULT NULL COMMENT '公司简称',
				COMPANY_NAME_EN VARCHAR(128) NULL DEFAULT NULL COMMENT '公司英文名称',
				REG_PLACE VARCHAR(20) NULL DEFAULT NULL COMMENT '公司注册地址',
				REG_ADDRESS VARCHAR(128) NULL DEFAULT NULL COMMENT '公司注册地址',
				ENT_TYPE VARCHAR(20) NULL DEFAULT NULL COMMENT '公司性质',
				REGCAPITAL DOUBLE(12,2) NULL DEFAULT NULL COMMENT '注册资本',
				REG_CURRENCY VARCHAR(20) NULL DEFAULT NULL COMMENT '注册资本币种',
				JUDICIAL_PERSON VARCHAR(32) NULL DEFAULT NULL COMMENT '法人名称',
				BUSINESS_SCOPE VARCHAR(128) NULL DEFAULT NULL COMMENT '公司经营范围',
				COM_TEL VARCHAR(20) NULL DEFAULT NULL COMMENT '公司电话',
				COM_FAX VARCHAR(64) NULL DEFAULT NULL COMMENT '公司传真',
				PERSON_INCHARGE VARCHAR(64) NULL DEFAULT NULL COMMENT '公司负责人',
				ZIP_CODE VARCHAR(6) NULL DEFAULT NULL COMMENT '邮编',
				CON_NAME VARCHAR(32) NULL DEFAULT NULL COMMENT '联系人姓名',
				CON_MOBILE VARCHAR(20) NULL DEFAULT NULL COMMENT '联系人手机',
				CON_EMAIL VARCHAR(32) NULL DEFAULT NULL COMMENT '联系人邮箱',
				CON_FAX VARCHAR(32) NULL DEFAULT NULL COMMENT '联系人传真',
				CON_CERT_TYPE VARCHAR(20) NULL DEFAULT NULL COMMENT '联系人证件类型',
				CON_CERT_NO VARCHAR(20) NULL DEFAULT NULL COMMENT '联系人证件号',
				CON_CERT_DATE DATE NULL DEFAULT NULL COMMENT '联系人证件失效时间',
				CON_CER1_ID INT(20) NULL DEFAULT NULL COMMENT '联系人身份证正面ID',
				CON_CER2_ID INT(20) NULL DEFAULT NULL COMMENT '联系人身份证反面ID',
				THERECER_INTGRATED VARCHAR(20) NULL DEFAULT NULL COMMENT '三证合一标志',
				BIZLIC_ID INT(20) NULL DEFAULT NULL COMMENT '营业执照ID',
				BIZLIC_NO VARCHAR(20) NULL DEFAULT NULL COMMENT '营业执照代码',
				BIZLIC_DATE DATE NULL DEFAULT NULL COMMENT '营业执照失效时间',
				TAXREGISTER_ID INT(20) NULL DEFAULT NULL COMMENT '税务等级证书ID',
				TAXREGISTER_NO VARCHAR(20) NULL DEFAULT NULL COMMENT '税务登记号',
				TAXREGISTER_DATE DATE NULL DEFAULT NULL COMMENT '税务登记失效时间',
				ORGREG_ID INT(20) NULL DEFAULT NULL COMMENT '组织机构代码证ID',
				ORGREG_NO VARCHAR(20) NULL DEFAULT NULL COMMENT '组织机构代码',
				ORGREG_DATE DATE NULL DEFAULT NULL COMMENT '组织机构失效时间',
				BANK_ID INT(20) NULL DEFAULT NULL COMMENT '银行开户许可证ID',
				BANK_TYPE VARCHAR(20) NULL DEFAULT NULL COMMENT '开户银行类别',
				BANK_DEPOSIT VARCHAR(128) NULL DEFAULT NULL COMMENT '开户银行',
				BANK_DEPOSIT_CODE VARCHAR(32) NULL DEFAULT NULL COMMENT '开户银行编码',
				BANK_ACCOUNTNO VARCHAR(32) NULL DEFAULT NULL COMMENT '银行账号',
				BANK_HOUSEHOULD VARCHAR(32) NULL DEFAULT NULL COMMENT '银行户主',
				INVOICE_TITLE VARCHAR(128) NULL DEFAULT NULL COMMENT '开票台头',
				INVOICE_ADDRESS VARCHAR(20) NULL DEFAULT NULL COMMENT '开票地址',
				INVOICE_ADDRESS_DT VARCHAR(128) NULL DEFAULT NULL COMMENT '开票详细地址',
				APPLY_SELLER_ID INT(20) NULL DEFAULT NULL COMMENT '申请审核机构',
				BUYER_FLAG VARCHAR(20) NULL DEFAULT NULL COMMENT '买家标识',
				SELLER_FLAG VARCHAR(20) NULL DEFAULT NULL COMMENT '卖家标识',
				THIRD_PART_FLAG VARCHAR(20) NULL DEFAULT NULL COMMENT '第三方标识',
				MAIN_USER_ID INT(20) NULL DEFAULT NULL COMMENT '主账号ID',
				MDM_DATA_CODE VARCHAR(20) NULL DEFAULT NULL COMMENT 'MDM主数据CODE',
				ERP_DATA_CODE VARCHAR(20) NULL DEFAULT NULL COMMENT 'ERP会员CODE',
				REG_TYPE VARCHAR(20) NULL DEFAULT NULL COMMENT '注册类型',
				STATUS VARCHAR(20) NULL DEFAULT NULL COMMENT '会员状态',
				AUDITOR VARCHAR(128) NULL DEFAULT NULL COMMENT '审核人',
				AUDIT_DATE DATETIME NULL DEFAULT NULL COMMENT '审核时间',
				AUDIT_RESULT VARCHAR(20) NULL DEFAULT NULL COMMENT '审核结果',
				AUDIT_OPINION VARCHAR(128) NULL DEFAULT NULL COMMENT '审核意见',
				MDM_AUDITOR VARCHAR(32) NULL DEFAULT NULL COMMENT 'MDM审核人',
				MDM_AUDIT_DATE DATETIME NULL DEFAULT NULL COMMENT 'MDM审核时间',
				MDM_AUDIT_OPINION VARCHAR(128) NULL DEFAULT NULL COMMENT 'MDM审核意见',
				MDM_AUDIT_RESULT VARCHAR(20) NULL DEFAULT NULL COMMENT 'MDM审核结果',
				MEMBER_CHG_ID INT(20) NULL DEFAULT NULL COMMENT '变更ID',
				CHANGE_STATUS VARCHAR(20) NULL DEFAULT NULL COMMENT '变更状态',
				ALIVE_FLAG VARCHAR(1) NOT NULL COMMENT '当前有效状态',
				LANG_VER VARCHAR(10) NULL DEFAULT NULL COMMENT '语言类型',
				CREATE_USER INT(20) NOT NULL COMMENT '创建者',
				CREATE_DATE DATETIME NOT NULL COMMENT '创建时间',
				UPDATE_USER INT(20) NULL DEFAULT NULL COMMENT '修改者',
				UPDATE_DATE DATETIME NULL DEFAULT NULL COMMENT '修改时间',
				DELETE_USER INT(20) NULL DEFAULT NULL COMMENT '删除者',
				DELETE_DATE DATETIME NULL DEFAULT NULL COMMENT '删除时间',
				BUYER_TYPE VARCHAR(20) NULL DEFAULT NULL COMMENT '买家类型(01：个人买家；02：公司买家)',
				AUDIT_OPTION_FLAG VARCHAR(20) NULL DEFAULT NULL COMMENT '审核身份标识(01：平台；02：卖家)',
				AUDIT_SELLER_ID INT(20) NULL DEFAULT NULL COMMENT '审核卖家ID(当审核身份标识为卖家审核时，审核的卖家ID)',
				SELLER_MDM VARCHAR(20) NULL DEFAULT NULL COMMENT '卖家MDM系统',
				SELLER_SAP VARCHAR(20) NULL DEFAULT NULL COMMENT '卖家SAP系统',
				SELLER_MDM_DATA_CODE VARCHAR(20) NULL DEFAULT NULL COMMENT '卖家MDM系统数据CODE',
				IS_PLAT_BLACK VARCHAR(2) NULL DEFAULT NULL COMMENT '黑名单状态(41：是；0：否)',
				INVOCIE_ADDRESS_LEFT3 VARCHAR(10) NULL DEFAULT NULL COMMENT '用户所属区域-省',
				INVOCIE_ADDRESS_RIGHT5 VARCHAR(10) NULL DEFAULT NULL COMMENT '用户所属区域-市',
				PRIMARY KEY (MEMBER_ID)
			)
			COMMENT='会员信息表'
			COLLATE='utf8_general_ci'
			ENGINE=InnoDB
	'''

	cur1.execute(sql)
	
	print('createTabl',cur1)

def selectTable(db):
	#创建查询游标
	cur1 = db.cursor()

	cur1.execute("select member_name,MEMBER_CODE,member_id from python_demo limit 10")

	# 使用 fetchall() 接收全部的返回结果行
	data = cur1.fetchall()
	for index,item in enumerate(data):
		print(index,sep=' ', end=' ')
		for index2,item2 in enumerate(item):
			print(item2,sep=' ', end=' ')
		print("")

def insertTable(db):
	#创建查询游标
	cur1 = db.cursor()

	cur1.execute("INSERT INTO python_demo (MEMBER_CODE, MEMBER_NAME, MEMBER_NAME_SHORT, COMPANY_NAME_EN, REG_PLACE, REG_ADDRESS, ENT_TYPE, REGCAPITAL, REG_CURRENCY, JUDICIAL_PERSON, BUSINESS_SCOPE, COM_TEL, COM_FAX, PERSON_INCHARGE, ZIP_CODE, CON_NAME, CON_MOBILE, CON_EMAIL, CON_FAX, CON_CERT_TYPE, CON_CERT_NO, CON_CERT_DATE, CON_CER1_ID, CON_CER2_ID, THERECER_INTGRATED, BIZLIC_ID, BIZLIC_NO, BIZLIC_DATE, TAXREGISTER_ID, TAXREGISTER_NO, TAXREGISTER_DATE, ORGREG_ID, ORGREG_NO, ORGREG_DATE, BANK_ID, BANK_TYPE, BANK_DEPOSIT, BANK_DEPOSIT_CODE, BANK_ACCOUNTNO, BANK_HOUSEHOULD, INVOICE_TITLE, INVOICE_ADDRESS, INVOICE_ADDRESS_DT, APPLY_SELLER_ID, BUYER_FLAG, SELLER_FLAG, THIRD_PART_FLAG, MAIN_USER_ID, MDM_DATA_CODE, ERP_DATA_CODE, REG_TYPE, STATUS, AUDITOR, AUDIT_DATE, AUDIT_RESULT, AUDIT_OPINION, MDM_AUDITOR, MDM_AUDIT_DATE, MDM_AUDIT_OPINION, MDM_AUDIT_RESULT, MEMBER_CHG_ID, CHANGE_STATUS, ALIVE_FLAG, LANG_VER, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE, DELETE_USER, DELETE_DATE, BUYER_TYPE, AUDIT_OPTION_FLAG, AUDIT_SELLER_ID, SELLER_MDM, SELLER_SAP, SELLER_MDM_DATA_CODE, IS_PLAT_BLACK, INVOCIE_ADDRESS_LEFT3, INVOCIE_ADDRESS_RIGHT5) VALUES ('A000001', '中国有限公司', '中国有限公司', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'xinming', '15136378930', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '0', '1', '0', 2, 'M0000001', '00M0000001', '10', '01', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, '01', '1', 'ZH-CN', 179143, '2016-05-28 12:16:23', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)")

	# 使用 fetchall() 接收全部的返回结果行
	#data = cur1.rowcount()

	#print('insertTable',data)

# 打开数据库连接
db = pymysql.connect(host='127.0.0.1',user='pu3147',
	password='1qaz@WSX',database='demo',port=3306,charset='UTF8')


dropTable(db)
createTable(db)
insertTable(db)
insertTable(db)
insertTable(db)
insertTable(db)
insertTable(db)
testeSelect(db)
selectTable(db)

# 关闭数据库连接
db.close()










